name: 'Update'
description: 'Update kubernetes configuration yamls and apply them to the current cluster'
author: 'JonathanAtCenterEdge'
branding:
  icon: upload-cloud
  color: blue
inputs:
  deployment:
    description: Yaml file containing the deployment resource
    required: true
  container:
    description: Name of the container to target
    required: true
  image:
    description: Image string to replace in the targetted container deployment resource
    required: false
  env:
    description: List of environment variables to update in the targetted container deployment resource
    required: false
  inplace:
    description: If true will modify the the deployment resource in-place, when true you can still find the modified deployment resource in the actions' output
    required: false
    default: "true"
  indention:
    description: Optionally specify the indention used for yq
    required: false
    default: "1"

runs:
  using: composite
  steps:
  - name: Check requirements
    id: udy-check-requirements
    run: |
      if [ "$RUNNER_OS" != "Linux" ]; then
          echo "$RUNNER_OS not supported"
          exit 1
      fi

      if ! command -v yq >/dev/null 2>&1; then
        echo "yq is not installed. Please install yq version >= 4.x.x."
        exit 1
      fi

      yq_version=$(yq --version)
      if [[ ! "$yq_version" =~ 4\.[0-9]+\.[0-9]+ ]]; then
        echo "Invalid or unsupported yq version. Please install yq version >= 4.x.x."
        exit 1
      fi
    shell: bash

  - name: Copy deployment
    id: udy-copy
    run: |
      if [[ -f ${{ inputs.deployment }} ]]; then
        original_file=${{ inputs.deployment }}
        new_file="${original_file%.*}-temp.${original_file##*.}"
        cp "$original_file" "$new_file"
      else
        echo "Deployment file doesn't exist"
        exit 1
      fi
    shell: bash

  - name: Update image
    id: udy-update-image
    if: ${{ inputs.image }} != ""
    run: |
      inplace_arg=""
      [[ ${{ inputs.inplace }} == "true" ]] && inplace_arg="--inplace"

      yq $inplace_arg --indent ${{ inputs.indention }} '(select(.spec.template.spec.containers[]) | .spec.template.spec.containers[] | select(.name == "${{ inputs.container }}"))
        .image |= "${{ inputs.image }}"' ./udy-temp${${{ inputs.deployment }}##*.}
    shell: bash
